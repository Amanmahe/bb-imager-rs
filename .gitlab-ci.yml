stages:
  - test
  - build
  - deploy
  - release

clippy:
  image: "rust:latest"
  stage: test
  tags:
    - docker-amd64
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends libudev-dev
    - rustup component add clippy
  script:
    - make checks

test:
  image: "rust:latest"
  stage: test
  tags:
    - docker-amd64
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends libudev-dev
  script:
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo test --workspace --verbose

windows:
  image: "rust:latest"
  tags:
    - docker-amd64
  variables:
    RUST_BUILDER: cargo
  stage: build
  before_script:
    - echo "Download dependencies"
    - apt-get update && apt-get --assume-yes install gcc-mingw-w64 zip
    - rustup target add x86_64-pc-windows-gnu
  script:
    - make release-windows-x86_64-pc-windows-gnu
  artifacts:
    paths:
      - release/

linux_x86_64:
  image: "rust:latest"
  tags:
    - docker-amd64
  variables:
    RUST_BUILDER: cargo
  stage: build
  before_script:
    - echo "Download dependencies"
    - apt-get update && apt-get --assume-yes install libssl-dev libudev-dev desktop-file-utils
    - echo "Setup appimagetool"
    - wget https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-$(uname -m).AppImage -O /usr/local/bin/appimagetool
    - chmod +x /usr/local/bin/appimagetool
    - rustup target add x86_64-unknown-linux-gnu
    - cargo install cargo-deb
  script:
    - make release-linux-x86_64-unknown-linux-gnu
  artifacts:
    paths:
      - release/

linux_aarch64:
  image: "rust:latest"
  tags:
    - docker-amd64
  variables:
    RUST_BUILDER: cargo
    CROSS_ARCH: arm64
    PKG_CONFIG_ALLOW_CROSS: 1
    CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
    PB2_MSPM0: 1
  stage: build
  before_script:
    - echo "Download dependencies"
    - dpkg --add-architecture ${CROSS_ARCH}
    - apt-get update && apt-get --assume-yes install libssl-dev:${CROSS_ARCH} libudev-dev:${CROSS_ARCH} desktop-file-utils gcc-aarch64-linux-gnu
    - echo "Setup appimagetool"
    - wget https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-$(uname -m).AppImage -O /usr/local/bin/appimagetool
    - chmod +x /usr/local/bin/appimagetool
    - rustup target add aarch64-unknown-linux-gnu
    - cargo install cargo-deb
  script:
    - PKG_CONFIG_PATH="/usr/lib/aarch64-linux-gnu/pkgconfig/:${PKG_CONFIG_PATH}" make release-linux-aarch64-unknown-linux-gnu
  artifacts:
    paths:
      - release/

linux_arm:
  image: "rust:latest"
  tags:
    - docker-amd64
  variables:
    RUST_BUILDER: cargo
    CROSS_ARCH: armhf
    PKG_CONFIG_ALLOW_CROSS: 1
    CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER: arm-linux-gnueabihf-gcc
  stage: build
  before_script:
    - echo "Download dependencies"
    - dpkg --add-architecture ${CROSS_ARCH}
    - apt-get update && apt-get --assume-yes install libssl-dev:${CROSS_ARCH} libudev-dev:${CROSS_ARCH} desktop-file-utils gcc-arm-linux-gnueabihf
    - echo "Setup appimagetool"
    - wget https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-$(uname -m).AppImage -O /usr/local/bin/appimagetool
    - chmod +x /usr/local/bin/appimagetool
    - rustup target add armv7-unknown-linux-gnueabihf
    - cargo install cargo-deb
  script:
    - PKG_CONFIG_PATH="/usr/lib/arm-linux-gnueabihf/pkgconfig/:${PKG_CONFIG_PATH}" make release-linux-armv7-unknown-linux-gnueabihf
  artifacts:
    paths:
      - release/

darwin:
  image: macos-14-xcode-15
  stage: build
  tags:
    - macos
  variables:
    RUST_BUILDER: cargo
  before_script:
    - brew install create-dmg rustup git-lfs
    - git lfs install
    - git lfs fetch
    - git lfs checkout
    - rustup target add x86_64-apple-darwin aarch64-apple-darwin
  script:
    - rustc --version
    - make release-darwin-x86_64-apple-darwin
    - make release-darwin-aarch64-apple-darwin
    - make release-darwin-universal-apple-darwin
  artifacts:
    paths:
      - release/

include:
  - component: openbeagle.org/ayush1325/ci-components/package-registry-upload@f978eab991610929089e1f7acc2954723dda9173
    inputs:
      job-name: package-registry-upload-job
      job-stage: deploy
      job-needs: ["darwin", "windows", "linux_x86_64", "linux_aarch64", "linux_arm"]
      release_dir: ${CI_PROJECT_DIR}/release
  - component: openbeagle.org/ayush1325/ci-components/release-from-file@f978eab991610929089e1f7acc2954723dda9173
    rules:
      - if: $CI_COMMIT_TAG
    inputs:
      job-name: release-job
      job-stage: release
      job-needs: ["package-registry-upload-job"]
      release_file: release/release.yml
      changelog_generation: true
