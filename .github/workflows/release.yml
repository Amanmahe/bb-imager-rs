name: Create Release artifacts

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  linux-native:
    strategy:
      matrix:
        platform:
          - os-name: Linux aarch64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-gnu

          - os-name: Linux x86_64
            runs-on: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu

    name: Build Artifacts - ${{ matrix.platform.os-name }}
    runs-on: ${{ matrix.platform.runs-on }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        lfs: true
    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y --no-install-recommends libudev-dev
    - name: Select rust toolchain
      run: rustup toolchain install stable --profile minimal
    - name: Use caching
      uses: Swatinem/rust-cache@v2
    - name: Install Cargo packager
      run: cargo install cargo-packager --locked
    - name: Build GUI Binary
      run: cargo build --locked --release -p bb-imager-gui -F bcf_cc1352p7 -F bcf_msp430 --target ${{ matrix.platform.target }}
    - name: Create packages
      run: cargo packager -p bb-imager-gui -r -f appimage -f deb --target ${{ matrix.platform.target }}
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        prerelease: true
        name: Continuous Release
        tag_name: continuous-release
        files: bb-imager-gui/dist/*

  linux-cross:
    strategy:
      matrix:
        platform:
          - os-name: Linux arm
            runs-on: ubuntu-24.04
            target: armv7-unknown-linux-gnueabihf
            # cargo packager does not seem to work with appimage on arm32 right now
            formats: -f deb
            features: -F bcf_msp430 -F bcf_cc1352p7
    name: Build Artifacts - ${{ matrix.platform.os-name }}
    runs-on: ${{ matrix.platform.runs-on }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        lfs: true
    - name: Build binary
      uses: houseabsolute/actions-rust-cross@v1
      with:
        command: build
        target: ${{ matrix.platform.target }}
        args: "--locked --release ${{ matrix.platform.features }} -p bb-imager-gui"
        strip: true
    - name: Install Cargo packager
      run: cargo install cargo-packager --locked
    - name: Create packages
      run: cargo packager -p bb-imager-gui -r ${{ matrix.platform.formats }} --target ${{ matrix.platform.target }}
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        prerelease: true
        name: Continuous Release
        tag_name: continuous-release
        files: bb-imager-gui/dist/*

  windows-x86_64:
    name: Build Artifacts - Windows x86_64
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        lfs: true
    - name: Select rust toolchain
      run: rustup toolchain install stable --profile minimal
    - name: Use caching
      uses: Swatinem/rust-cache@v2
    - name: Install Cargo packager
      run: cargo install cargo-packager --locked
    - name: Build GUI Binary
      run: cargo build --locked --release -p bb-imager-gui -F bcf_cc1352p7 -F bcf_msp430 --target x86_64-pc-windows-msvc
    - name: Create Installer
      run: cargo packager -p bb-imager-gui -r -f wix --target x86_64-pc-windows-msvc
    - name: Create Portable Executable
      run: |
        VERSION=$(grep "version =" Cargo.toml | sed "s/version = \"\(.*\)\"/\1/")
        cp target/x86_64-pc-windows-msvc/release/bb-imager-gui.exe bb-imager-gui/dist/bb-imager-gui_${VERSION}_x86_64.exe
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        prerelease: true
        name: Continuous Release
        tag_name: continuous-release
        files: bb-imager-gui/dist/*

  # Building installer does not work for aarch64 right now. So only portable exe for now
  windows-aarch64:
    name: Build Artifacts - Windows aarch64
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        lfs: true
    - name: Select rust toolchain
      run: rustup toolchain install stable --profile minimal
    - name: Add aarch64 target
      run:  rustup target add aarch64-pc-windows-msvc
    - name: Use caching
      uses: Swatinem/rust-cache@v2
    - name: Build GUI Binary
      run: cargo build --locked -r -p bb-imager-gui -F bcf_cc1352p7 -F bcf_msp430 --target aarch64-pc-windows-msvc
    - name: Create Portable Executable
      run: |
        VERSION=$(grep "version =" Cargo.toml | sed "s/version = \"\(.*\)\"/\1/")
        mkdir -p bb-imager-gui/dist
        cp target/aarch64-pc-windows-msvc/release/bb-imager-gui.exe bb-imager-gui/dist/bb-imager-gui_${VERSION}_aarch64.exe
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        prerelease: true
        name: Continuous Release
        tag_name: continuous-release
        files: bb-imager-gui/dist/*

  macos:
    strategy:
      matrix:
        arch: [aarch64, x86_64]
    name: Build Artifacts - MacOS ${{ matrix.arch }}
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        lfs: true
    - name: Select rust toolchain
      run: rustup toolchain install stable --profile minimal
    - name: Add ${{ matrix.arch }} target
      run:  rustup target add ${{ matrix.arch }}-apple-darwin
    - name: Use caching
      uses: Swatinem/rust-cache@v2
    - name: Install Cargo packager
      run: cargo install cargo-packager --locked
    - name: Build GUI Binary
      run: cargo build --locked -r -p bb-imager-gui --target ${{ matrix.arch }}-apple-darwin
    - name: Create dmg
      run: cargo packager -p bb-imager-gui -r -f dmg --target ${{ matrix.arch }}-apple-darwin
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        prerelease: true
        name: Continuous Release
        tag_name: continuous-release
        files: bb-imager-gui/dist/*
