name: Create Release artifacts

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  VERBOSE: 1

defaults:
  run:
    shell: bash

jobs:
  native:
    strategy:
      matrix:
        platform:
          - os-name: Linux aarch64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            make-targets: setup-debian-deps setup-packaging-deps package-gui-linux-targz package-gui-linux-appimage package-gui-linux-deb
            bcf: 1

          - os-name: Linux x86_64
            runs-on: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            make-targets: setup-debian-deps setup-packaging-deps package-gui-linux-targz package-gui-linux-appimage package-gui-linux-deb
            bcf: 1

          - os-name: Windows aarch64
            runs-on: windows-latest
            target: aarch64-pc-windows-msvc
            make-targets: setup-packaging-deps package-gui-windows-portable
            bcf: 1

          - os-name: Windows x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
            make-targets: setup-packaging-deps package-gui-windows-wix package-gui-windows-portable
            bcf: 1

          - os-name: MacOS aarch64
            runs-on: macos-latest
            target: aarch64-apple-darwin
            make-targets: setup-packaging-deps package-gui-macos-dmg
            bcf: 0

          - os-name: MacOS x86_64
            runs-on: macos-latest
            target: x86_64-apple-darwin
            make-targets: setup-packaging-deps package-gui-macos-dmg
            bcf: 0

    name: Build Artifacts - ${{ matrix.platform.os-name }}
    runs-on: ${{ matrix.platform.runs-on }}
    env:
      BCF_CC1352P7: ${{ matrix.platform.bcf }}
      BCF_MSP430: ${{ matrix.platform.bcf }}
      TARGET: ${{ matrix.platform.target }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        lfs: true
    - name: Select rust toolchain
      run: rustup toolchain install stable --profile minimal
    - name: Add ${{ matrix.platform.target }} target
      run:  rustup target add ${{ matrix.platform.target }}
    - name: Use caching
      uses: Swatinem/rust-cache@v2
    - name: Build packages
      run: make ${{ matrix.platform.make-targets }}
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        prerelease: true
        name: Continuous Release
        tag_name: continuous-release
        files: bb-imager-gui/dist/*

  linux-cross:
    strategy:
      matrix:
        platform:
          - os-name: Linux arm
            runs-on: ubuntu-24.04
            target: armv7-unknown-linux-gnueabihf
            # cargo packager does not seem to work with appimage on arm32 right now
            formats: -f deb -f pacman
            features: -F bcf_msp430 -F bcf_cc1352p7
    name: Build Artifacts - ${{ matrix.platform.os-name }}
    runs-on: ${{ matrix.platform.runs-on }}
    env:
      NO_BUILD: 1
      BCF_CC1352P7: 1
      BCF_MSP430: 1
      TARGET: ${{ matrix.platform.target }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        lfs: true
    - name: Build binary
      uses: houseabsolute/actions-rust-cross@v1
      with:
        command: build
        target: ${{ matrix.platform.target }}
        args: "--locked --release ${{ matrix.platform.features }} -p bb-imager-gui"
        strip: true
    - name: Build package
      run: make setup-packaging-deps package-gui-linux-targz package-gui-linux-deb
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        prerelease: true
        name: Continuous Release
        tag_name: continuous-release
        files: bb-imager-gui/dist/*
